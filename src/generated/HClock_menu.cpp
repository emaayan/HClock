/*
    The code in this file uses open source libraries provided by thecoderscorner

    DO NOT EDIT THIS FILE, IT WILL BE GENERATED EVERY TIME YOU USE THE UI DESIGNER
    INSTEAD EITHER PUT CODE IN YOUR SKETCH OR CREATE ANOTHER SOURCE FILE.

    All the variables you may need access to are marked extern in this file for easy
    use elsewhere.
 */

#include <tcMenu.h>
#include "HClock_menu.h"
#include "../ThemeMonoBordered.h"

// Global variable declarations
const PROGMEM  ConnectorLocalInfo applicationInfo = { "JewishClock", "5cef02bc-7171-4d0b-bfaa-88db9290f006" };

U8g2Drawable _dispDrawable(&_disp);
GraphicsDeviceRenderer renderer(30, applicationInfo.name, &_dispDrawable);

// Global Menu Item declarations
const PROGMEM AnyMenuInfo minfoExit = { "Exit", 2, 0xffff, 0, onExit };
ActionMenuItem menuExit(&minfoExit, nullptr, INFO_LOCATION_PGM);
const PROGMEM AnyMenuInfo minfoCity = { "Set City", 6, 0xffff, 0, NO_CALLBACK };
ListRuntimeMenuItem menuCity(&minfoCity, 0, fnCityRtCall, nullptr, INFO_LOCATION_PGM);
const PROGMEM AnyMenuInfo minfoCountry = { "Set Country", 5, 0xffff, 0, NO_CALLBACK };
ListRuntimeMenuItem menuCountry(&minfoCountry, 10, fnCountryRtCall, &menuCity, INFO_LOCATION_PGM);
const PROGMEM SubMenuInfo minfoLocation = { "Location", 4, 0xffff, 0, NO_CALLBACK };
BackMenuItem menuBackLocation(&minfoLocation, &menuCountry, INFO_LOCATION_PGM);
SubMenuItem menuLocation(&minfoLocation, &menuBackLocation, &menuExit, INFO_LOCATION_PGM);
const PROGMEM AnyMenuInfo minfoSetTime = { "Set Time", 3, 0xffff, 0, onSetTime };
TimeFormattedMenuItem menuSetTime(&minfoSetTime, TimeStorage(0, 0, 0, 0), (MultiEditWireType)8, &menuLocation, INFO_LOCATION_PGM);
const PROGMEM AnyMenuInfo minfoSetDate = { "Set Date", 1, 0xffff, 0, onSetDate };
DateFormattedMenuItem menuSetDate(&minfoSetDate, DateStorage(1, 1, 2020), &menuSetTime, INFO_LOCATION_PGM);

void setupMenu() {
    // First we set up eeprom and authentication (if needed).
    setSizeBasedEEPROMStorageEnabled(true);
    // Code generated by plugins.
    renderer.setUpdatesPerSecond(10);
    switches.init(internalDigitalIo(), SWITCHES_POLL_EVERYTHING, true);
    menuMgr.initForUpDownOk(&renderer, &menuSetDate, 26, 25, 27, 20);
    renderer.setTitleMode(BaseGraphicalRenderer::TITLE_FIRST_ROW);
    renderer.setUseSliderForAnalog(false);
    installMonoBorderedTheme(renderer, MenuFontDef(nullptr, 1), MenuFontDef(nullptr, 1), true);
}

